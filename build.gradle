allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:1.5.1'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.ajoberstar.grgit'

// if branch is develop branch add SNAPSHOT and commit hash to file name
def snapshot = ""

if ( grgit.branch.getCurrent().getName() == "develop" ) {
  snapshot = "-${grgit.head().abbreviatedId}"
}

def modVersion = "0.0.1"
def minecraftVersion = "1.10.2"

version = minecraftVersion + "-" + modVersion + snapshot
group = "me.otho.metamods.items"
archivesBaseName = "MM-Items"

minecraft {
    version = "1.10.2-12.18.1.2011"

    if(file("../run").exists()) {
      runDir = "../run"
    } else {
      runDir = "run"
    }

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160518"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // Compile MM-Core
    compile 'com.github.0tho:MM-Core:master-SNAPSHOT'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
